
defaults.namehint.showall yes
defaults.namehint.extended on

pcm.!default {
	type hw
	card dspgdvf99css
	device 0
}

ctl.!default {
        type hw
        card dspgdvf99css
}

#For Call purpose, required controls are set from user
#space applications
pcm.CssDevice {
	type hooks
	slave.pcm {
		type hw
		card dspgdvf99css
		device 1
	}
}

pcm.CssPlayback {
	type hooks
	slave.pcm {
		type hw
		card dspgdvf99css
		device 1
	}

	hooks.0 {
		type ctl_elems
		hook_args [
			{ name 'Output0_diff Gain'	value	1}
			{ name 'Output1_diff Gain'	value	1}
			{ name 'DAC0_CURRENT_SCALE'      value  0dB}
			]
		}
}

pcm.CssPlayback_Headset {
        type hooks
       slave.pcm {
                type hw
                card dspgdvf99css
                device 1
        }

        hooks.0 {
                type ctl_elems
                hook_args [
                        { name 'Output2_diff Gain'      value   1}
                        { name 'Output3_diff Gain'      value   1}
			{ name 'DAC1_CURRENT_SCALE'      value  0dB}
			]
		}	
}



#Playback on Spaeker, to be used with alsa_test utility, switched to 
#speaker mode
pcm.CssPlayback_Spk {
	type hooks
	slave.pcm {
		type hw
		card dspgdvf99css
		device 1
	}
	hooks.0 {
		type ctl_elems
		hook_args [
			{ name 'DCLASS_EN'	value	on}
			{ name 'DCLASS_SUP_MODE'	value	1}
			]
		}
}

#Playback on USB Speaker, to be used with alsa_test utility, switched to
#USB mode
pcm.CssPlayback_Usb {
	type hooks
	slave.pcm {
		type hw
		card dspgdvf99css
		device 1
	}
	hooks.0 {
		type ctl_elems
		hook_args [
			{ name 'DCLASS_EN'	value	off}
			]
		}
}

#Capture from Handset, to be used along with alsa_test utility
pcm.CssCapture {
	type hooks
	slave.pcm {
		type hw
		card dspgdvf99css
		device 1
	}

	hooks.0 {
		type ctl_elems
		hook_args [
			{ name 'Input Mux0'	value	DIFFIN1	}
			{ name 'DIFFIN1 Gain'	value	18	}
			]
		}
}

#Capture from Headset, to be used along with alsa_test utility
pcm.CssCapture_Headset {
	type hooks
	slave.pcm {
		type hw
		card dspgdvf99css
		device 1
	}

	hooks.0 {
		type ctl_elems
		hook_args [
			{ name 'Input Mux0'	value	DIFFIN0	}
			{ name 'DIFFIN0 Gain'	value	18	}
			]
		}
}

#Capture from onboard speaker, to be used along with alsa_test utility
#Fixme:: Not tested
pcm.CssCapture_Spk {
	type hooks
	slave.pcm {
		type hw
		card dspgdvf99css
		device 1
	}

	hooks.0 {
		type ctl_elems
		hook_args [
			{ name 'Input Mux0'	value	SINGIN0-SINGIN1	}
                        { name 'SINGIN0 Gain'   value   10}
                        { name 'SINGIN1 Gain'   value   10}
			]
		}
}

#Capture from Usb mic, to be used along with alsa_test utility
pcm.CssCapture_Usb {
	type hooks
	slave.pcm {
		type hw
		card dspgdvf99css
		device 1
	}
}

pcm.CssTrace {                                                   
        type plug                                                
        slave.pcm {                                       
                type hw                                            
                card dspgdvf99css                                                                      
                device 3
        }                                                                                   
}

pcm.CssTrace2 {
        type plug
        slave.pcm {
                type hw
                card dspgdvf99css
                device 5
        }
}

pcm.CssTrace3 {
        type plug
        slave.pcm {
                type hw
                card dspgdvf99css
                device 6
        }
}


pcm.snd_card {
        type hw
        card dspgdvf99css
        device 1
}

pcm.dmixer {
        type dmix
        ipc_key 2041

        slave.pcm "snd_card"
        slave {
          format S16_LE
          rate 16000
          period_size 320
        }
}

pcm.dsnooper {
        type dsnoop
        ipc_key 2049

        slave.pcm "snd_card"
        slave {
          format S16_LE
          rate 16000
          period_size 320
        }
}

############################################################################################
############################################################################################

# Bluetooth:
# ---------

# General Bluetooth Playback
#
pcm.CSR_Playback_Bluetooth {
        type hooks
        slave.pcm {
                type hw
                card dspgdvf99evbbtc
                device 0
                rate 48000
        }
        hooks.0 {
                type ctl_elems
                hook_args [
                ]
        }
}

#######################################################################################
# Bluetooth Playback Telephony
#
pcm.CSR_Playback_Bluetooth_incall {
        type hooks
        slave.pcm {
                type hw
                card dspgdvf99evbbtc
                device 0
                rate 8000
        }
        hooks.0 {
                type ctl_elems
                hook_args [
# Other controls:

                        { name 'Telephony'                      value   On              }

                ]
        }
}

#######################################################################################

#######################################################################################
# CMBS Playback Telephony
#
pcm.DCX81_Playback_CMBS_incall {
        type hooks
        slave.pcm {
                type hw
                card dspgdvf99evbcmb
                device 0
                rate 8000
        }
        hooks.0 {
                type ctl_elems
                hook_args [
# Other controls:

                        { name 'Telephony'                      value   On              }

                ]
        }
}

#######################################################################################

# pcm device for music playback, out of a call,
# in Bluetooth Headset.
#
pcm.CSR_Bluetooth-A2DP {
        type hooks
        slave.pcm {
                type hw
                card dspgdvf99evbbtc
                device 0
                rate 48000
        }
        hooks.0 {
                type ctl_elems
                hook_args [
                ]
        }
}

#######################################################################################
#######################################################################################
# General Bluetooth Capture
#
pcm.CSR_Capture_Bluetooth {
        type hooks
        slave.pcm {
                type hw
                card dspgdvf99evbbtc
                device 0
        }
        hooks.0 {
                type ctl_elems
                hook_args [
                ]
        }
}

#######################################################################################


#######################################################################################
# General CMBS Capture
#
pcm.DCX81_Capture_CMBS {
        type hooks
        slave.pcm {
                type hw
                card dspgdvf99evbcmb
                device 0
        }
        hooks.0 {
                type ctl_elems
                hook_args [
                ]
        }
}

#######################################################################################

#######################################################################################
#######################################################################################


# pcm device for FXS (both capture and playback)
pcm.si32178Play {
    type hooks
    slave.pcm {
        type hw
        card dspgdvf99evbfxs
        device 0
        rate 8000
    }
    hooks.0 {
        type ctl_elems
        hook_args [
            { name 'Telephony'                      value   On}
        ]
    }
}

#####################################################################################
#####################################################################################

# Pulse Audio setting for USB support

pcm.pulse {
    type pulse
}

ctl.pulse {
   type pulse
}

#pcm.!default {
#   type pulse
#}

#ctl.!default {
#  type pulse
#}

